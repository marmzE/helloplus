{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"flbpp": {
			"type": "string"
		},
		"api_lucca_istance": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/0_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_1_Main",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Init_Global_Audit_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@activity('Init_Global_Audit_ID').output.firstRow.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Successful_Global_Audit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_1_Main",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_Audit]",
							"storedProcedureParameters": {
								"AuditId": {
									"value": {
										"value": "@activity('Init_Global_Audit_ID').output.firstRow.AuditId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Global_Audit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_1_Main",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_Audit]",
							"storedProcedureParameters": {
								"AuditId": {
									"value": {
										"value": "@activity('Init_Global_Audit_ID').output.firstRow.AuditId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Init_Global_Audit_ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_Audit]",
								"storedProcedureParameters": {
									"SolutionName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "TBD",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "0_Master_Outbound",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"concurrency": 1,
				"folder": {
					"name": "Inbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T09:29:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_Main')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/pipelines/0_Master_Outbound')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute 3_Insert_Beqom_Final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute 3_Insert_Beqom_Final",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details_1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Execute 3_Insert_Beqom_Final').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute 2_Staging_Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2_Staging_Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute 3_Insert_Beqom_Final",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute 2_Staging_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3_Insert_Beqom_Final",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute 2_Staging_Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Execute 2_Staging_Data').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/pipelines/2_Staging_Data')]",
				"[concat(variables('factoryId'), '/pipelines/3_Insert_Beqom_Final')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Contract_Type_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Referential Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "contract_type_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "contract_type_code",
						"type": "nvarchar"
					},
					{
						"name": "contract_type_parent_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "contract_type_parent_code",
						"type": "nvarchar"
					},
					{
						"name": "contract_type_short_description",
						"type": "nvarchar"
					},
					{
						"name": "contract_type_long_description",
						"type": "nvarchar"
					},
					{
						"name": "contract_type_parent_short_description",
						"type": "nvarchar"
					},
					{
						"name": "contract_type_parent_long_description",
						"type": "nvarchar"
					},
					{
						"name": "culture",
						"type": "nvarchar"
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "contract_type_client_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_ref_contract_type_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/0_Master_Outbound')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_1_Main_Outbound",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Init_Global_Audit_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1_Main_Outbound",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@activity('Init_Global_Audit_ID').output.firstRow.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Successful_Global_Audit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_1_Main_Outbound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_Audit]",
							"storedProcedureParameters": {
								"AuditId": {
									"value": {
										"value": "@activity('Init_Global_Audit_ID').output.firstRow.AuditId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Global_Audit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_1_Main_Outbound",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_Audit]",
							"storedProcedureParameters": {
								"AuditId": {
									"value": {
										"value": "@activity('Init_Global_Audit_ID').output.firstRow.AuditId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Init_Global_Audit_ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_Audit]",
								"storedProcedureParameters": {
									"SolutionName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					}
				],
				"concurrency": 1,
				"variables": {
					"ForEachStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Outbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T09:29:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_Main_Outbound')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_Staging_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Contract Type",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Compensation Component",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Contract_Type",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Absence",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Org Assignment",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Absence",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Compensation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Absence",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Compensation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Job Assignment",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Personal Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Job_Assignment",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Org Assignment",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Job Assignment",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Org_Assignment",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Personal Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Organization",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Personal_Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Business Unit",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Business_Unit",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Organization",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Contract Type",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Organization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Absence Type",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Business Unit",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Absence_Type",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Compensation Component",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Absence Type",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Component",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Rem Nature",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Compensation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Rem_Nature",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AuditId": {
									"value": "@pipeline().parameters.AuditId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-07T21:59:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Contract_Type')]",
				"[concat(variables('factoryId'), '/pipelines/Absence')]",
				"[concat(variables('factoryId'), '/pipelines/Compensation')]",
				"[concat(variables('factoryId'), '/pipelines/Job_Assignment')]",
				"[concat(variables('factoryId'), '/pipelines/Org_Assignment')]",
				"[concat(variables('factoryId'), '/pipelines/Personal_Data')]",
				"[concat(variables('factoryId'), '/pipelines/Business_Unit')]",
				"[concat(variables('factoryId'), '/pipelines/Organization')]",
				"[concat(variables('factoryId'), '/pipelines/Absence_Type')]",
				"[concat(variables('factoryId'), '/pipelines/Component')]",
				"[concat(variables('factoryId'), '/pipelines/Rem_Nature')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_Insert_Beqom_Final')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ETL Main SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ETL Main SP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('ETL Main SP').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ETL Main SP",
						"description": "SP called to follow EasyPack logic to run QC & insert to final tables using SQL code",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[_sp_etl_1_main]",
							"storedProcedureParameters": {
								"AuditId": {
									"value": {
										"value": "@pipeline().parameters.AuditId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecMachineName": {
									"value": "ADF",
									"type": "String"
								},
								"ExecUser": {
									"value": "Admin",
									"type": "String"
								},
								"PkgName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_Main_Outbound')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Check if data need to be send",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Quarter Code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Quarter Code').output.firstRow.quarter, 1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success_Log_Job",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Execute Payout",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
										"storedProcedureParameters": {
											"EndDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"LogJobId": {
												"value": {
													"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Success",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('flbpp')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Success_Log_Job_Details",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Success_Log_Job",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": "Success",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"LogJobId": {
												"value": {
													"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TaskName": {
												"value": "Success",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('flbpp')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Execute Payout",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Payout",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AuditId": {
												"value": "@pipeline().parameters.AuditId",
												"type": "Expression"
											},
											"Quarter": {
												"value": "@activity('Get Quarter Code').output.firstRow.Quarter",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Fail_Log_Job",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Execute Payout",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
										"storedProcedureParameters": {
											"EndDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"LogJobId": {
												"value": {
													"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Fail",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('flbpp')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Fail_Log_Job_Details",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Fail_Log_Job",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": {
													"value": "@activity('Execute Payout').Error.Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"LogJobId": {
												"value": {
													"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TaskName": {
												"value": "Error",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('flbpp')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Success_Log_Job_",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
										"storedProcedureParameters": {
											"EndDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"LogJobId": {
												"value": {
													"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Success",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('flbpp')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Success_Log_Job_Details_",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Success_Log_Job_",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": "Success",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"LogJobId": {
												"value": {
													"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TaskName": {
												"value": "Success",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('flbpp')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Get Quarter Code",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_payout_check_quarter]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Absence_Staging",
								"type": "DatasetReference"
							}
						}
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"ForEachStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Outbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-07T21:59:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Absence_Staging')]",
				"[concat(variables('factoryId'), '/pipelines/Payout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contract_Type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "contract_type_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "contract_type_short_description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['items']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Contract_Type",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Referential Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Contract_Type')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Absence')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get EE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['leavePeriod']['ownerId']"
										},
										"sink": {
											"name": "id_payee",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['leavePeriod']['startsOn']"
										},
										"sink": {
											"name": "absence_start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['leavePeriod']['endsOn']"
										},
										"sink": {
											"name": "absence_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['leaveAccountDuration']"
										},
										"sink": {
											"name": "absence_in_days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['leaveAccountId']"
										},
										"sink": {
											"name": "absence_type_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Absence",
								"type": "DatasetReference",
								"parameters": {
									"BaseUrl": {
										"value": "@activity('Get EE').output.firstRow.url",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Absence_Staging",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get EE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[_ep_etl_sp_load_data_get_employees_absences]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Absence_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Fail_Log_Job_EE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get EE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details_EE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job_EE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get EE').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Absence')]",
				"[concat(variables('factoryId'), '/datasets/Absence_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Compensation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['workContract']['ownerId']"
										},
										"sink": {
											"name": "id_payee",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['startsOn']"
										},
										"sink": {
											"name": "compensation_start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['endsOn']"
										},
										"sink": {
											"name": "compensation_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['isCurrent']"
										},
										"sink": {
											"name": "compensation_generic_text1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['comments']"
										},
										"sink": {
											"name": "compensation_generic_text2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['natureId']"
										},
										"sink": {
											"name": "compensation_component_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['payPeriodType']"
										},
										"sink": {
											"name": "compensation_generic_text3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Compensation",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Compensation')]",
				"[concat(variables('factoryId'), '/datasets/Compensation_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job_Assignment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "job_assignment_generic_text1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ownerId']"
										},
										"sink": {
											"name": "id_payee",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['startsOn']"
										},
										"sink": {
											"name": "job_start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['endsOn']"
										},
										"sink": {
											"name": "job_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['type']['id']"
										},
										"sink": {
											"name": "contract_type_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['items']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Assignment",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Job_Assignment_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Assignment')]",
				"[concat(variables('factoryId'), '/datasets/Job_Assignment_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Org_Assignment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['ownerId']"
										},
										"sink": {
											"name": "id_payee",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['startsOn']"
										},
										"sink": {
											"name": "org_assignment_start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['endsOn']"
										},
										"sink": {
											"name": "org_assignment_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['establishment']['id']"
										},
										"sink": {
											"name": "organizational_unit_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Assignment",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Org_Assignment_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Assignment')]",
				"[concat(variables('factoryId'), '/datasets/Org_Assignment_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Personal_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get All EE Infos",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id_payee",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "alternative_payee_code1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "fullname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstName']"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lastName']"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['login']"
										},
										"sink": {
											"name": "contact_email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['seniorityDate']"
										},
										"sink": {
											"name": "first_hire_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Personal_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Personal_Data_Staging",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get All EE Infos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "idPayee",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['seniorityDate']"
										},
										"sink": {
											"name": "HireDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['manager']['id']"
										},
										"sink": {
											"name": "Manager_1_Id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['manager']['name']"
										},
										"sink": {
											"name": "Manager_1_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['department']['id']"
										},
										"sink": {
											"name": "DepartmentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['department']['name']"
										},
										"sink": {
											"name": "DepartmentName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "AuditID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "InsertTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Personal_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Get_All_EE_Infos",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Personal_data')]",
				"[concat(variables('factoryId'), '/datasets/Personal_Data_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Get_All_EE_Infos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Business_Unit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Business_Unit_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Business_Unit_Short_Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Business_Unit",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Ref_Business_Unit_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Referential Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Business_Unit')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Business_Unit_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Organization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "organization_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "organization_short_description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Org_Unit",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Ref_Organization_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Referential Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Org_Unit')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Organization_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Absence_Type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Absence_type_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Absence_type_Short_Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['leaveAccountCategory']['id']"
										},
										"sink": {
											"name": "Absence_type_Parent_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['leaveAccountCategory']['name']"
										},
										"sink": {
											"name": "Absence_type_Parent_Short_Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Absence_Type",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Ref_Absence_Type",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Referential Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Absence_Type')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Absence_Type')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Component')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "component_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "component_short_description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['category']['id']"
										},
										"sink": {
											"name": "component_parent_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['category']['name']"
										},
										"sink": {
											"name": "component_parent_short_description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Component",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Ref_Component",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Referential Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T15:53:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Component')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Component')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rem_Nature')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from API to Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from API to Staging').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy from API to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "AuditId",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									{
										"name": "GetDate",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isActive']"
										},
										"sink": {
											"name": "is_active",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['category']['id']"
										},
										"sink": {
											"name": "ParentCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['category']['name']"
										},
										"sink": {
											"name": "ParentDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AuditId']"
										},
										"sink": {
											"name": "pkg_exec_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['GetDate']"
										},
										"sink": {
											"name": "insert_time",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "Rem_Nature",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Ref_Rem_Nature_Staging",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Inbound/Populate Staging/Referential Data"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-07T21:59:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Rem_Nature')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Rem_Nature_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Absence_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Employee Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "payee_leave_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_payee",
						"type": "int",
						"precision": 10
					},
					{
						"name": "absence_start_date",
						"type": "date"
					},
					{
						"name": "absence_end_date",
						"type": "date"
					},
					{
						"name": "absence_type_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "absence_reason_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "absence_in_days",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "absence_in_working_days",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "pro_rata_factor",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "sys_modified_etl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modified_user",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modifier_user",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sys_load_execution",
						"type": "int",
						"precision": 10
					},
					{
						"name": "absence_generic_text1",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text2",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text3",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text4",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text5",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text6",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text7",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text8",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text9",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_text10",
						"type": "nvarchar"
					},
					{
						"name": "absence_generic_date1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "absence_generic_date2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "absence_generic_date3",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "absence_generic_date4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "absence_generic_date5",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "absence_generic_numeric1",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "absence_generic_numeric2",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "absence_generic_numeric3",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "absence_generic_numeric4",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "absence_generic_numeric5",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "alternative_payee_code1",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_py_payee_absence_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contract_Type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Referential Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "directory/api/work-contract-types/"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"name": {
										"type": "string"
									},
									"culturedLabels": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"cultureCode": {
													"type": "integer"
												},
												"value": {
													"type": "string"
												}
											}
										}
									},
									"archetypeId": {
										"type": "integer"
									},
									"usersCount": {
										"type": "integer"
									},
									"establishmentsCount": {
										"type": "integer"
									},
									"isArchived": {
										"type": "boolean"
									},
									"actions": {
										"type": "object",
										"properties": {
											"canArchive": {
												"type": "boolean"
											},
											"canDelete": {
												"type": "boolean"
											}
										}
									},
									"properties": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"isEditableAssociation": {
													"type": "boolean"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Absence')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BaseUrl": {
						"type": "string",
						"defaultValue": "/api/v3/leaves?date=since,1900-01-01&fields=leavePeriod.ownerId,leavePeriod.startson,leavePeriod.endson,leaveAccountDuration,url,leaveAccountId&leavePeriod.ownerId=7"
					}
				},
				"folder": {
					"name": "API Lucca/Employee Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().BaseUrl",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"leavePeriod": {
												"type": "object",
												"properties": {
													"ownerId": {
														"type": "integer"
													},
													"startsOn": {
														"type": "string"
													},
													"endsOn": {
														"type": "string"
													}
												}
											},
											"leaveAccountDuration": {
												"type": "number"
											},
											"url": {
												"type": "string"
											},
											"leaveAccountId": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Compensation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Employee Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/v3/fixedRemunerationItems?fields=workContract.ownerId,startsOn,endsOn,amount,isCurrent,comments,natureId,payPeriodType"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"workContract": {
												"type": "object",
												"properties": {
													"ownerId": {
														"type": "integer"
													}
												}
											},
											"startsOn": {
												"type": "string"
											},
											"endsOn": {
												"type": "string"
											},
											"amount": {
												"type": "number"
											},
											"isCurrent": {
												"type": "boolean"
											},
											"comments": {
												"type": "string"
											},
											"natureId": {
												"type": "integer"
											},
											"payPeriodType": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Compensation_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Employee Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "payee_compensation_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_payee",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compensation_start_date",
						"type": "date"
					},
					{
						"name": "compensation_end_date",
						"type": "date"
					},
					{
						"name": "compensation_component_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "percentage",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "percentage_basis_compensation_component_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reason_for_change",
						"type": "nvarchar"
					},
					{
						"name": "sys_modified_etl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modified_user",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modifier_user",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sys_load_execution",
						"type": "int",
						"precision": 10
					},
					{
						"name": "currency_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compensation_generic_text1",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text2",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text3",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text4",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text5",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text6",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text7",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text8",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text9",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_text10",
						"type": "nvarchar"
					},
					{
						"name": "compensation_generic_date1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compensation_generic_date2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compensation_generic_date3",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compensation_generic_date4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compensation_generic_date5",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compensation_generic_numeric1",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "compensation_generic_numeric2",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "compensation_generic_numeric3",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "compensation_generic_numeric4",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "compensation_generic_numeric5",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "alternative_payee_code1",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_py_payee_compensation_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Employee Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/directory/api/4.0/work-contracts?fields=ownerId,startsOn,endsOn,type,isapplicable,establishment,id&limit=10000"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"ownerId": {
										"type": "integer"
									},
									"startsOn": {
										"type": "string"
									},
									"endsOn": {
										"type": "null"
									},
									"isApplicable": {
										"type": "boolean"
									},
									"establishment": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											}
										}
									},
									"type": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job_Assignment_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Employee Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "payee_job_assignment_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_payee",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_start_date",
						"type": "date"
					},
					{
						"name": "job_end_date",
						"type": "date"
					},
					{
						"name": "employee_type_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "contract_type_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "corporate_title_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "local_grade_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "global_grade_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_family_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "career_group_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "local_role_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "global_role_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pay_scale_group_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pay_scale_level_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "position_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "full_time_working_hours",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "contract_working_hours",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "fte",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "reason_for_change",
						"type": "nvarchar"
					},
					{
						"name": "sys_modified_etl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modified_user",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modifier_user",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sys_load_execution",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_assignment_generic_text1",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text2",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text3",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text4",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text5",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text6",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text7",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text8",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text9",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_text10",
						"type": "nvarchar"
					},
					{
						"name": "job_assignment_generic_date1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "job_assignment_generic_date2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "job_assignment_generic_date3",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "job_assignment_generic_date4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "job_assignment_generic_date5",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "job_assignment_generic_numeric1",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "job_assignment_generic_numeric2",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "job_assignment_generic_numeric3",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "job_assignment_generic_numeric4",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "job_assignment_generic_numeric5",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "benchmark_mapping_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "alternative_payee_code1",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_py_payee_job_assignment_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Org_Assignment_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Employee Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "payee_org_assignment_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_payee",
						"type": "int",
						"precision": 10
					},
					{
						"name": "org_assignment_start_date",
						"type": "date"
					},
					{
						"name": "org_assignment_end_date",
						"type": "date"
					},
					{
						"name": "rehire_date",
						"type": "date"
					},
					{
						"name": "manager1_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "manager2_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "payeestatus_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "company_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "division_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "business_unit_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "organizational_unit_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "personnel_area_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "personnel_subarea_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "employee_group_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "employee_subgroup_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cost_center_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "home_country_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "host_country_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "expat_flag_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "location_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "office_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "payroll_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reason_for_change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sys_modified_etl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modified_user",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modifier_user",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sys_load_execution",
						"type": "int",
						"precision": 10
					},
					{
						"name": "org_assignment_generic_text1",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text2",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text3",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text4",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text5",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text6",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text7",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text8",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text9",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_text10",
						"type": "nvarchar"
					},
					{
						"name": "org_assignment_generic_date1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "org_assignment_generic_date2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "org_assignment_generic_date3",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "org_assignment_generic_date4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "org_assignment_generic_date5",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "org_assignment_generic_numeric1",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "org_assignment_generic_numeric2",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "org_assignment_generic_numeric3",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "org_assignment_generic_numeric4",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "org_assignment_generic_numeric5",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "alternative_payee_code1",
						"type": "nvarchar"
					},
					{
						"name": "termination_date",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_py_payee_org_assignment_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Personal_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Employee Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/v3/users?fields=id, employeeNumber, name, firstname, lastname,login,mail,seniorityDate,manager,department"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"employeeNumber": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"login": {
												"type": "null"
											},
											"mail": {
												"type": "null"
											},
											"seniorityDate": {
												"type": "string"
											},
											"manager": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													},
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											},
											"department": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													},
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Personal_Data_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Employee Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_payee",
						"type": "int",
						"precision": 10
					},
					{
						"name": "alternative_payee_code1",
						"type": "nvarchar"
					},
					{
						"name": "alternative_payee_code2",
						"type": "nvarchar"
					},
					{
						"name": "fullname",
						"type": "nvarchar"
					},
					{
						"name": "salutation",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "name_prefix",
						"type": "nvarchar"
					},
					{
						"name": "name_suffix",
						"type": "nvarchar"
					},
					{
						"name": "latin_firstname",
						"type": "nvarchar"
					},
					{
						"name": "latin_lastname",
						"type": "nvarchar"
					},
					{
						"name": "latin_fullname",
						"type": "nvarchar"
					},
					{
						"name": "latin_salutation",
						"type": "nvarchar"
					},
					{
						"name": "latin_title",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nationality1",
						"type": "nvarchar"
					},
					{
						"name": "nationality2",
						"type": "nvarchar"
					},
					{
						"name": "communication_language",
						"type": "nvarchar"
					},
					{
						"name": "first_hire_date",
						"type": "date"
					},
					{
						"name": "contact_email",
						"type": "nvarchar"
					},
					{
						"name": "sys_modified_etl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modified_user",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sys_modifier_user",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sys_load_execution",
						"type": "int",
						"precision": 10
					},
					{
						"name": "personal_data_generic_text1",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text2",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text3",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text4",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text5",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text6",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text7",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text8",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text9",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_text10",
						"type": "nvarchar"
					},
					{
						"name": "personal_data_generic_date1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "personal_data_generic_date2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "personal_data_generic_date3",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "personal_data_generic_date4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "personal_data_generic_date5",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "personal_data_generic_numeric1",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "personal_data_generic_numeric2",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "personal_data_generic_numeric3",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "personal_data_generic_numeric4",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "personal_data_generic_numeric5",
						"type": "decimal",
						"precision": 26,
						"scale": 8
					},
					{
						"name": "firstname",
						"type": "nvarchar"
					},
					{
						"name": "lastname",
						"type": "nvarchar"
					},
					{
						"name": "payee_ref_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "date_of_birth",
						"type": "date"
					},
					{
						"name": "ethnicity_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "education_level_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_py_payee_personal_data_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_All_EE_Infos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Employee Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "idPayee",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeNumber",
						"type": "nvarchar"
					},
					{
						"name": "Manager_1_Id",
						"type": "nvarchar"
					},
					{
						"name": "Manager_1_Name",
						"type": "nvarchar"
					},
					{
						"name": "Manager_2_Id",
						"type": "nvarchar"
					},
					{
						"name": "Manager_2_Name",
						"type": "nvarchar"
					},
					{
						"name": "ContractStartDate",
						"type": "nvarchar"
					},
					{
						"name": "ContractEndDate",
						"type": "nvarchar"
					},
					{
						"name": "HireDate",
						"type": "nvarchar"
					},
					{
						"name": "DepartmentId",
						"type": "nvarchar"
					},
					{
						"name": "DepartmentName",
						"type": "nvarchar"
					},
					{
						"name": "EstablishmentId",
						"type": "nvarchar"
					},
					{
						"name": "EstablishmentName",
						"type": "nvarchar"
					},
					{
						"name": "AuditID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_py_get_all_payee_stg"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Business_Unit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Referential Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/v3/departments/"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											},
											"url": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Business_Unit_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Referential Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Business_Unit_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Business_Unit_Code",
						"type": "nvarchar"
					},
					{
						"name": "Business_Unit_Parent_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Business_Unit_Parent_Code",
						"type": "nvarchar"
					},
					{
						"name": "Business_Unit_Short_Description",
						"type": "nvarchar"
					},
					{
						"name": "Business_Unit_Long_Description",
						"type": "nvarchar"
					},
					{
						"name": "Business_Unit_Parent_Short_Description",
						"type": "nvarchar"
					},
					{
						"name": "Business_Unit_Parent_Long_Description",
						"type": "nvarchar"
					},
					{
						"name": "Culture",
						"type": "nvarchar"
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_ref_business_unit_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Org_Unit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Referential Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/organization/structure/api/establishments/"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"name": {
										"type": "string"
									},
									"code": {
										"type": "string"
									},
									"legalUnitId": {
										"type": "integer"
									},
									"legalUnit": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											},
											"code": {
												"type": "string"
											}
										}
									},
									"legalIdentificationNumber": {
										"type": "null"
									},
									"activityCode": {
										"type": "null"
									},
									"calendarId": {
										"type": "null"
									},
									"address": {
										"type": "object",
										"properties": {
											"street": {
												"type": "string"
											},
											"zipCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											}
										}
									},
									"timeZoneId": {
										"type": "string"
									},
									"usersCount": {
										"type": "integer"
									},
									"createdAt": {
										"type": "string"
									},
									"author": {
										"type": "object",
										"properties": {
											"fullName": {
												"type": "string"
											},
											"id": {
												"type": "integer"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"url": {
												"type": "string"
											}
										}
									},
									"lastModifiedAt": {
										"type": "string"
									},
									"lastModifier": {
										"type": "object",
										"properties": {
											"fullName": {
												"type": "string"
											},
											"id": {
												"type": "integer"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"url": {
												"type": "string"
											}
										}
									},
									"isArchived": {
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Organization_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Referential Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "organization_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "organization_code",
						"type": "nvarchar"
					},
					{
						"name": "organization_parent_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "organization_parent_code",
						"type": "nvarchar"
					},
					{
						"name": "organization_short_description",
						"type": "nvarchar"
					},
					{
						"name": "organization_long_description",
						"type": "nvarchar"
					},
					{
						"name": "organization_parent_short_description",
						"type": "nvarchar"
					},
					{
						"name": "organization_parent_long_description",
						"type": "nvarchar"
					},
					{
						"name": "culture",
						"type": "nvarchar"
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "organization_client_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_ref_organization_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Absence_Type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Referential Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/v3/leaveaccounts?fields=id,name,url,leaveAccountCategory"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"leaveAccountCategory": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													},
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Absence_Type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Referential Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Absence_type_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Absence_type_Code",
						"type": "nvarchar"
					},
					{
						"name": "Absence_type_Parent_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Absence_type_Parent_Code",
						"type": "nvarchar"
					},
					{
						"name": "Absence_type_Short_Description",
						"type": "nvarchar"
					},
					{
						"name": "Absence_type_Long_Description",
						"type": "nvarchar"
					},
					{
						"name": "Absence_type_Parent_Short_Description",
						"type": "nvarchar"
					},
					{
						"name": "Absence_type_Parent_Long_Description",
						"type": "nvarchar"
					},
					{
						"name": "Culture",
						"type": "nvarchar"
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_ref_absence_type_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Component')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Referential Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/v3/fixedremunerationnatures?fields=id,name,category"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											},
											"category": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													},
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Component')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Referential Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "component_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "component_code",
						"type": "nvarchar"
					},
					{
						"name": "component_parent_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "component_parent_code",
						"type": "nvarchar"
					},
					{
						"name": "component_short_description",
						"type": "nvarchar"
					},
					{
						"name": "component_long_description",
						"type": "nvarchar"
					},
					{
						"name": "component_parent_short_description",
						"type": "nvarchar"
					},
					{
						"name": "component_parent_long_description",
						"type": "nvarchar"
					},
					{
						"name": "culture",
						"type": "nvarchar"
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "file_process_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "row_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tree_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "is_primary",
						"type": "bit"
					},
					{
						"name": "is_oneoff",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ep_dm_ref_component_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rem_Nature')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "API Lucca/Referential Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/v3/variableremunerationnatures?FIELDS=id,name,isActive,category"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											},
											"isActive": {
												"type": "boolean"
											},
											"category": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													},
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Rem_Nature_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging/Referential Data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "ParentCode",
						"type": "nvarchar"
					},
					{
						"name": "ParentDescription",
						"type": "nvarchar"
					},
					{
						"name": "is_active",
						"type": "nvarchar"
					},
					{
						"name": "insert_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pkg_exec_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tb_ref_rem_natures_staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Payout')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Init_Log_Job_Id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob]",
								"storedProcedureParameters": {
									"AuditId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.AuditId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ref_Contract_Type_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Success_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ETL Outbound success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ETL Outbound fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('WEB SEND PVI TO LUCCA').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ETL Outbound success",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "WEB SEND PVI TO LUCCA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_pvi_payout_update_status]",
								"storedProcedureParameters": {
									"Method": {
										"type": "String",
										"value": "POST"
									},
									"Status": {
										"type": "String",
										"value": "Réussi"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "ETL Outbound fail",
						"description": "",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "WEB SEND PVI TO LUCCA",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_pvi_payout_update_status]",
								"storedProcedureParameters": {
									"Method": {
										"type": "String",
										"value": "POST"
									},
									"Status": {
										"type": "String",
										"value": "Echec"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "API LUCCA TO BEQOM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Init_Log_Job_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "quarterCode",
										"value": {
											"value": "@pipeline().parameters.Quarter",
											"type": "Expression"
										}
									},
									{
										"name": "dateSend",
										"value": {
											"value": "@utcNow('yyyy-MM-01T00:00:00')",
											"type": "Expression"
										}
									}
								],
								"sqlReaderStoredProcedureName": "[[dbo].[sp_payout_send_api]",
								"storedProcedureParameters": {
									"QuarterCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Quarter",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkContractId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "workContractId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "natureId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "natureId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 27
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 26
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "quarterCode"
										},
										"sink": {
											"name": "quarterCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dateSend"
										},
										"sink": {
											"name": "date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Tb_VariableRemunerationItems",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "PaggaRem to beqom",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get EE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "variableremunerationitemsId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['workContract']['id']"
										},
										"sink": {
											"name": "workContractId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['nature']['id']"
										},
										"sink": {
											"name": "natureId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['period']['date']"
										},
										"sink": {
											"name": "date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['comments']"
										},
										"sink": {
											"name": "comments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['data']['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "api_variableremunerationitems",
								"type": "DatasetReference",
								"parameters": {
									"BaseUrl": {
										"value": "@activity('Get EE').output.firstRow.url",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Tb_VariableRemunerationItems_GET",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get EE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "API LUCCA TO BEQOM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[_ep_etl_sp_load_data_get_employees_rem_variables]",
								"storedProcedureParameters": {
									"QuarterCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Quarter",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Update Exists EE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PaggaRem to beqom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[_ep_etl_sp_load_data_get_employees_rem_variables_update_id]",
							"storedProcedureParameters": {
								"QuarterCode": {
									"value": {
										"value": "@pipeline().parameters.Quarter",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WEB SEND PVI TO LUCCA",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GET POST Method",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://floa.ilucca.net/api/v3/variableRemunerationItems",
							"method": "POST",
							"headers": {
								"Authorization": "lucca application=27c4d36e-7bf6-499e-839a-634d8450eb44"
							},
							"body": {
								"value": "@activity('GET POST Method').output.firstRow.url",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET POST Method",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Exists EE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[_ep_etl_sp_payout_rem_variables_post]",
								"storedProcedureParameters": {
									"QuarterCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Quarter",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "PUT Method",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get EE to merge data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get EE to merge data').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "PUT",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Retrieve Body",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://floa.ilucca.net/api/v3/variableRemunerationItems/',item().variableremunerationitemsId)",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": "lucca application=27c4d36e-7bf6-499e-839a-634d8450eb44"
										},
										"body": {
											"value": "@activity('Retrieve Body').output.firstRow.url",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Retrieve Body",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[_ep_etl_sp_payout_rem_variables_put]",
											"storedProcedureParameters": {
												"Id": {
													"type": "Int32",
													"value": {
														"value": "@{item().variableremunerationitemsId}",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Compensation_Staging",
											"type": "DatasetReference"
										}
									}
								}
							]
						}
					},
					{
						"name": "Success_Log_Job_1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ETL Outbound success_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ETL Outbound fail_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_update_LogJob]",
							"storedProcedureParameters": {
								"EndDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": "Fail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success_Log_Job_Details_1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Success_Log_Job_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": "Success",
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Log_Job_Details_1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fail_Log_Job_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_etl_inbound_insert_LogJob_Detail]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('PUT Method').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogJobId": {
									"value": {
										"value": "@activity('Init_Log_Job_Id').output.firstRow.LogJobId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TaskName": {
									"value": "Error",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('flbpp')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ETL Outbound success_1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PUT Method",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_pvi_payout_update_status]",
								"storedProcedureParameters": {
									"Method": {
										"type": "String",
										"value": "PUT"
									},
									"Status": {
										"type": "String",
										"value": "Réussi"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "ETL Outbound fail_1",
						"description": "",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PUT Method",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_pvi_payout_update_status]",
								"storedProcedureParameters": {
									"Method": {
										"type": "String",
										"value": "PUT"
									},
									"Status": {
										"type": "String",
										"value": "Echec"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Get EE to merge data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Exists EE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[_ep_etl_sp_payout_get_rem_variables_put]",
								"storedProcedureParameters": {
									"quarterCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Quarter",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Compensation_Staging",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"parameters": {
					"AuditId": {
						"type": "int",
						"defaultValue": 0
					},
					"Quarter": {
						"type": "string",
						"defaultValue": "T12023"
					}
				},
				"variables": {
					"ForEachStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Outbound"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-07T21:59:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ref_Contract_Type_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Compensation_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Tb_VariableRemunerationItems')]",
				"[concat(variables('factoryId'), '/datasets/api_variableremunerationitems')]",
				"[concat(variables('factoryId'), '/datasets/Tb_VariableRemunerationItems_GET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tb_VariableRemunerationItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "variableremunerationitemsId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "alreadyExists",
						"type": "bit"
					},
					{
						"name": "workContractId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "natureId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 26,
						"scale": 2
					},
					{
						"name": "comments",
						"type": "nvarchar"
					},
					{
						"name": "quarterCode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tb_variableremunerationitems_api_lucca"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/api_variableremunerationitems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('api_lucca_istance')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BaseUrl": {
						"type": "string",
						"defaultValue": "/api/v3/variableremunerationitems?fields=id,workContract.id,nature.id,period,comments,amount&workContract.id=149,155&nature.id=33"
					}
				},
				"folder": {
					"name": "API Lucca"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().BaseUrl",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"header": {
							"type": "object",
							"properties": {
								"generated": {
									"type": "string"
								},
								"serverTime": {
									"type": "integer"
								},
								"queryTime": {
									"type": "integer"
								},
								"queryCount": {
									"type": "integer"
								},
								"principal": {
									"type": "string"
								},
								"processId": {
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"workContract": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													}
												}
											},
											"nature": {
												"type": "object",
												"properties": {
													"id": {
														"type": "integer"
													}
												}
											},
											"period": {
												"type": "object",
												"properties": {
													"date": {
														"type": "string"
													},
													"payPeriodTypeAsString": {
														"type": "string"
													},
													"payPeriodType": {
														"type": "integer"
													},
													"type": {
														"type": "integer"
													},
													"typeAsString": {
														"type": "string"
													}
												}
											},
											"comments": {
												"type": "string"
											},
											"amount": {
												"type": "number"
											}
										}
									}
								}
							}
						},
						"metadata": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tb_VariableRemunerationItems_GET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('flbpp')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beqom Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "variableremunerationitemsId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "workContractId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "natureId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 26,
						"scale": 2
					},
					{
						"name": "comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tb_variableremunerationitems_api_lucca_get"
				}
			},
			"dependsOn": []
		}
	]
}